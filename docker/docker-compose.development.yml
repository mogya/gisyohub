version: '2'
services:
  data:
    image: busybox
    command: /bin/sh
    volumes:
      - /share
      - ../rails:/rails
      - ../front:/front
      - ../log:/log
      - ../db:/db
      - ./nginx/app.conf:/etc/nginx/conf.d/app.conf
      - ./mysql/app.conf:/etc/mysql/conf.d/app.conf:ro
      - /etc/group:/etc/group:ro
      - /etc/passwd:/etc/passwd:ro
      - /etc/shadow:/etc/shadow:ro
    user: ${USER_ID}:${GROUP_ID}
  db:
    image: postgres
    volumes:
      - /db/postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
  nginx:
    build:
      context: ../
      dockerfile: docker/nginx/Dockerfile
    depends_on: 
      - rails
      - front
    ports:
     - "80:${WEB_PORT}"
     - "${WEB_PORT}:${WEB_PORT}"
    environment:
      - PORT=$WEB_PORT
      - RAILS_PORT
      - NODE_PORT
      - NODE_ENV=development
  rails:
    build:
      context: ../rails
      dockerfile: docker/Dockerfile.development
      args:
        - RUBY_VERSION
        - USER_ID
        - GROUP_ID
    working_dir: /rails
    depends_on:
      - db
    ports:
      - $RAILS_PORT:$RAILS_PORT
    volumes_from:
      - data
    environment:
      - PORT=$RAILS_PORT
      - RAILS_ENV=development
      - SECRET_KEY_BASE
      - DB_HOST
      - DB_NAME
      - DB_USER
      - DB_PASSWORD
      - TWITTER_KEY
      - TWITTER_SECRET
      - TWITTER_ACCESS_TOKEN
      - TWITTER_ACCESS_SECRET
    user: ${USER_ID}:${GROUP_ID}
  front:
    build:
      context: ../front
      dockerfile: docker/Dockerfile
    working_dir: /front
    ports:
     - $NODE_PORT:$NODE_PORT
    volumes_from:
      - data
    environment:
      - NODE_ENV=development
      - API_HOST=localhost
      - API_PORT=$WEB_PORT
      - PORT=$NODE_PORT
    user: ${USER_ID}:${GROUP_ID}
