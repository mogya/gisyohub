version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
      - image: mdillon/postgis
        environment:
          POSTGRES_USER: dengenmap
    working_directory: ~/dengenmap
    steps:
      - checkout

      # Restore bundle cache
      - restore_cache:
          keys:
            - dengenmap-bundle-{{ checksum "Gemfile.lock" }}
            - dengenmap-bundle-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: dengenmap-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bin/rails db:test:prepare --trace

      # Run rspec in parallel
      - type: shell
        command: |
          bin/rake spec SPEC_OPTS='--profile 10 \
                            --format RspecJunitFormatter \
                            --out test_results/rspec.xml \
                            --format progress'
      # Save test results for timing analysis
      - store_test_results:
          path: test_results
